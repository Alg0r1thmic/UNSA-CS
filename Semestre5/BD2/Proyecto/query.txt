create view wordq as select distinct idWord1 from Relations;

create view word2 as select distinct idWord2 from Relations;

select word1_word2.idWord1,word1_word2.idWord2,IF(isnull(W),0,W) as W from word1_word2 left join Relations on word1_word2.idWord1 = Relations.idWord1 and word1_word2.idWord2 = Relations.idWord2 order by word1_word2.idWord1, word1_word2.idWord2 ASC; wher  -> 0.26 --> vector

select sum(A.W * B.W) as ps from (select * from vector where idWord1 = 14 and W<>0) as A inner join (select * from vector where idWord1 = 15 and W<>0) as B on A.idWord2 = B.idWord2;

select sqrt(sum(W * W)) as modulo from (select * from vector where idWord1 = 14) as A;

select PS.ps / Modulo.modulo from (select sum(A.W * B.W) as ps from (select * from vector where idWord1 = 14) as A inner join (select * from vector where idWord1 = 15) as B on A.idWord2 = B.idWord2) as PS , (select sqrt(sum(W * W)) as modulo from (select * from vector where idWord1 = 14) as E) as Modulo;

select PS.ps / (Modulo1.modulo * Modulo2.modulo) from (select sum(A.W * B.W) as ps from (select * from vector where idWord1 = 14) as A inner join (select * from vector where idWord1 = 15) as B on A.idWord2 = B.idWord2) as PS , (select sqrt(sum(W * W)) as modulo from (select * from vector where idWord1 = 14) as E) as Modulo1 , (select sqrt(sum(W * W)) as modulo from (select * from vector where idWord1 = 15) as EE) as Modulo2;

select A.idWord1, A.idWord2 , IF(isnull(W),0,W) from ((select * from word1 where idWord1 = 14) as B cross join word2) as A left join Relations on A.idWord1 = Relations.idWord1 and A.idWord2 = Relations.idWord2;

select PS.ps / (Modulo1.modulo * Modulo2.modulo) from (select sum(A.W * B.W) as ps from (select * from vector where idWord1 = 14 and W<>0) as A inner join (select * from vector where idWord1 = 15 and W<>0) as B on A.idWord2 = B.idWord2) as PS , (select sqrt(sum(W * W)) as modulo from (select * from vector where idWord1 = 14 and W<>0) as E) as Modulo1 , (select sqrt(sum(W * W)) as modulo from (select * from vector where idWord1 = 15 and W<>0) as EE) as Modulo2);


select * from (select * from vector where W<>0 and idWord1 <> 14) as A inner join (select * from vector where W<>0 and idWord1 = 14) as B on A.idWord2 = B.idWord2 order by A.idWord1,A.idWord2 ASC;


select A.idWord1,sum(A.W * B.W) as ps from (select * from vector where W<>0 and idWord1 <> 14) as A inner join (select * from vector where W<>0 and idWord1 = 14) as B on A.idWord2 = B.idWord2 group by A.idWord1;


select idWord1,sqrt(sum(W*W)) as modulo from (select * from vector) as A group by idWord1;


select B.idWord1, (A.modulo * B.modulo) as mulMods from (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vector where idWord1 = 14) as E group by idWord1) as A cross join (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vector where idWord1 <> 14) as EE group by idWord1) as B;


select A.idWord1,(ps/mulMods) as cos from (select AA.idWord1,sum(AA.W * AB.W) as ps from (select * from vector where W<>0 and idWord1 <> id) as AA inner join (select * from vector where W<>0 and idWord1 = id) as AB on AA.idWord2 = AB.idWord2 group by AA.idWord1) as A inner join (select BB.idWord1, (BA.modulo * BB.modulo) as mulMods from (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vector where idWord1 = id) as E group by idWord1) as BA cross join (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vector where idWord1 <> id) as EE group by idWord1) as BB) as B on A.idWord1 = B.idWord1 order by cos DESC;


select Word,cos from (select A.idWord1,(ps/mulMods) as cos from (select AA.idWord1,sum(AA.W * AB.W) as ps from (select * from vector where W<>0 and idWord1 <> id) as AA inner join (select * from vector where W<>0 and idWord1 = id) as AB on AA.idWord2 = AB.idWord2 group by AA.idWord1) as A inner join (select BB.idWord1, (BA.modulo * BB.modulo) as mulMods from (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vector where idWord1 = id) as E group by idWord1) as BA cross join (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vector where idWord1 <> id) as EE group by idWord1) as BB) as B on A.idWord1 = B.idWord1) as O inner join Word on O.idWord1 = Word.idWord order by O.cos DESC;


Transformada de Furier


stdio
stdlib
conio
complix

1D
2D
3D

Forma discreta 

FFT 
DFT 
SFT 

LoadImage(gif,png,bmp) RGB
SaveImage(gif,png,bmp)

transformadas Directa
transformadas Inversa

complex Z;
x = real(2);
y = img(Z);
m = mod(Z);
Z = z1 + z2;

DELIMITER//
CREATE DEFINER=root@localhost PROCEDURE search(id INT)
BEGIN
select Word,cos from (select A.idWord1,(ps/mulMods) as cos from (select AA.idWord1,sum(AA.W * AB.W) as ps from (select * from vec where W<>0 and idWord1 <> id) as AA
inner join (select * from vec where W<>0 and idWord1 = id) as AB on AA.idWord2 = AB.idWord2 group by AA.idWord1) as A
inner join (select BB.idWord1, (BA.modulo * BB.modulo) as mulMods from (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vec where idWord1 = id) as E group by idWord1) as BA
cross join (select idWord1,sqrt(sum(W*W)) as modulo from (select * from vec where idWord1 <> id) as EE group by idWord1) as BB) as B on A.idWord1 = B.idWord1) as O
inner join Word on O.idWord1 = Word.idWord order by O.cos DESC;
END//




select sum(A.W * B.W) as ps from (select * from vector where idWord1 = 14 and W<>0) as A inner join (select * from vector where idWord1 = 15 and W<>0) as B on A.idWord2 = B.idWord2;


select sqrt(sum(W*W)) as modulo from Relations group by idWord1;

select idWord1, sqrt(sum(W*W)) * (select sqrt(sum(W*W)) from Relations where idWord1 = 1 group by idWord1)  as modulo from Relations where idWord1 <> 1 group by idWord1;


select A.idWord1, sum(A.W * B.W) as ps from (select idWord1,idWord2, W from Relations where idWord1 <> 1) as A inner join (select idWord2, W from Relations where idWord1 = 1) as B on A.idWord2 = B.idWord2 group by A.idWord1;

select A.idWord1, sum(A.W * B.W) as ps from  Relations  as A inner join  Relations as B on A.idWord2 = B.idWord2 where A.idWord1 <> 1 and B.idWord1 = 1 group by A.idWord1;


select Word, cos from (select X.idWord1, (X.ps/Y.modulo) as cos from 
(select A.idWord1, sum(A.W * B.W) as ps from  Relations  as A inner join  Relations as B on A.idWord2 = B.idWord2 where A.idWord1 <> 1 and B.idWord1 = 1 group by A.idWord1)as X 
inner join (select idWord1, sqrt(sum(W*W)) * (select sqrt(sum(W*W)) from Relations use index(idx2) where idWord1 = 1 group by idWord1)  as modulo from Relations use index(PRIMARY) where idWord1 <> 1 group by idWord1) as Y on X.idWord1 = Y.idWord1) as AA 
inner join Word on idWord1 = idWord order by cos DESC limit 0,10;






select Word, cos from (select X.idWord1, (X.ps/Y.modulo) as cos from (select A.idWord1, sum(A.W * B.W) as ps from (select idWord1,idWord2, W from Relations where idWord1 <> 1) as A inner join (select idWord2, W from Relations where idWord1 = 1) as B on A.idWord2 = B.idWord2 group by A.idWord1) as X inner join (select idWord1, sqrt(sum(W*W)) * (select sqrt(sum(W*W)) from Relations use index(idx2) where idWord1 = 1 group by idWord1)  as modulo from Relations use index(PRIMARY) where idWord1 <> 1 group by idWord1) as Y on X.idWord1 = Y.idWord1) as AA inner join Word on idWord1 = idWord order by cos DESC limit 0,10;



select Word, cos from (select X.idWord1, (X.ps/Y.modulo) as cos from (select A.idWord1, sum(A.W * B.W) as ps from (select idWord1,idWord2, W from Relations where idWord1 <> id) as A inner join (select idWord2, W from Relations where idWord1 = id) as B on A.idWord2 = B.idWord2 group by A.idWord1) as X inner join (select idWord1, sqrt(sum(W*W)) * (select sqrt(sum(W*W)) from Relations where idWord1 = id group by idWord1)  as modulo from Relations where idWord1 <> id group by idWord1) as Y on X.idWord1 = Y.idWord1) as AA inner join Word on idWord1 = idWord order by cos DESC limit pag,10;



select Word, cos from (select X.idWord1, (X.ps/Y.modulo) as cos from (select A.idWord1, sum(A.W * B.W) as ps from (select idWord1,idWord2, W from Relations where idWord1 <> id) as A inner join (select idWord2, W from Relations where idWord1 = id) as B on A.idWord2 = B.idWord2 group by A.idWord1) as X inner join (select idWord1, sqrt(sum(W*W)) * (select sqrt(sum(W*W)) from Relations use index(idx2) where idWord1 = id group by idWord1)  as modulo from Relations use index(PRIMARY) where idWord1 <> id group by idWord1) as Y on X.idWord1 = Y.idWord1) as AA inner join Word on idWord1 = idWord order by cos DESC limit 50;
